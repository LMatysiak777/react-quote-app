{"version":3,"sources":["components/Quote.js","App.js","index.js"],"names":["Quote","state","currentQuote","quote","author","previousQuote","generateRandomNumber","max","Math","floor","random","fetchQuote","newQuote","fetch","then","response","json","catch","error","alert","data","length","setState","id","this","className","onClick","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEMA,E,4MAEFC,MAAM,CAACC,aAAc,CAACC,MAAO,qDAAsDC,OAAQ,SAC3EC,cAAe,CAACF,MAAO,qDAAsDC,OAAQ,U,EAGrGE,qBAAuB,SAACC,GACxB,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,EAAI,GAAG,I,EAGxCI,WAAY,WACR,IAAIC,EACJC,MAAM,yIACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBC,OAAM,SAAAC,GAAQC,MAAM,UAAUD,MAC9BJ,MAAK,SAAAM,GACFR,EAASQ,EAAK,EAAKd,qBAAqBc,EAAKC,SAC7C,EAAKC,SAAS,CAACjB,cAAe,EAAKJ,MAAMC,eACzC,EAAKoB,SAAS,CAACpB,aAAcU,Q,EAKrCP,cAAe,WACX,EAAKiB,SAAS,CAACpB,aAAc,EAAKD,MAAMI,iB,4CAG5C,WACA,OACI,sBAAKkB,GAAG,YAAR,UACI,sBAAKA,GAAG,oBAAR,UACA,sBAAMA,GAAG,aAAT,SAAuBC,KAAKvB,MAAMC,aAAaC,QAC/C,mBAAGoB,GAAG,WAAN,SAAkBC,KAAKvB,MAAMC,aAAaE,YAC1C,sBAAKmB,GAAG,sBAAR,UACA,wBAAQE,UAAU,SAASF,GAAG,kBAAkBG,QAASF,KAAKnB,cAA9D,4BACA,wBAAQoB,UAAU,SAASF,GAAG,cAAaG,QAASF,KAAKb,WAAzD,kC,GAnCQgB,IAAMC,WAwCX5B,IChCA6B,MARf,WACC,OACC,qBAAKJ,UAAU,MAAf,SACC,cAAC,EAAD,OCAHK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8bda09ea.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Quote extends React.Component {\r\n    \r\n    state={currentQuote: {quote: \"From error to error one discovers the entire truth\", author: \"Freud\"},\r\n                    previousQuote: {quote: \"From error to error one discovers the entire truth\", author: \"Freud\"}}\r\n    \r\n\r\n    generateRandomNumber = (max) => {\r\n    return Math.floor(Math.random()*(max-1)+1)\r\n    }\r\n\r\n    fetchQuote =() => {\r\n        let newQuote;\r\n        fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\")\r\n        .then(response=>response.json())\r\n        .catch(error=>{alert(\"Error: \"+error)})\r\n        .then(data=>{ \r\n            newQuote=data[this.generateRandomNumber(data.length)];\r\n            this.setState({previousQuote: this.state.currentQuote});\r\n            this.setState({currentQuote: newQuote})\r\n        });\r\n        \r\n    }\r\n\r\n    previousQuote =()=> {\r\n        this.setState({currentQuote: this.state.previousQuote})\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div id=\"div-quote\">\r\n            <div id=\"div-quote-section\">\r\n            <cite id=\"cite-quote\">{this.state.currentQuote.quote}</cite>\r\n            <p id=\"p-author\">{this.state.currentQuote.author}</p></div>\r\n            <div id=\"div-buttons-section\">\r\n            <button className=\"button\" id=\"button-previous\" onClick={this.previousQuote}>Previous Quote</button>\r\n            <button className=\"button\" id=\"button-next\"onClick={this.fetchQuote}>Next Quote</button></div>\r\n        </div>\r\n    )\r\n}}\r\n\r\nexport default Quote;\r\n","import Quote from './components/Quote.js'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Quote/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}